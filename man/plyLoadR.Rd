% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plyLoadR.R
\name{plyLoadR}
\alias{plyLoadR}
\title{Load ply files into a three.js scene}
\usage{
plyLoadR(
  paths,
  localFiles = TRUE,
  plyCopiesFolder = "ply_local_copies",
  isWireframe = FALSE,
  isTransparent = FALSE,
  opacity = 1,
  camera = NULL,
  controls = NULL,
  elementId = NULL,
  toggleMeshes = NULL,
  showLoadingProgress = FALSE,
  width = "100\%",
  height = "65vh"
)
}
\arguments{
\item{paths}{List or vector of directory paths of the ply files to load.}

\item{localFiles}{Boolean. \code{TRUE} if the the ply files to load are
contained in paths down from the file where plyLoadR is called.
If \code{FALSE}, the ply files necessary will be copy and pasted into a
local directory.}

\item{plyCopiesFolder}{String. The name of the folder where the ply files
will be copied to, in case localFiles is \code{FALSE}.
Default value is "ply_local_copies".}

\item{isWireframe}{Boolean vector or list. \code{TRUE} implies that the geometry from the
corresponding ply file will be loaded as a wireframe.
Default value is \code{FALSE}.}

\item{isTransparent}{Boolean vector or list. \code{TRUE} implies that the geometry from the
corresponding ply file will be loaded as translucent.
Default value is \code{FALSE}.}

\item{opacity}{Numeric vector or list. Its values must be between 0 and 1,
setting the opacity of the corresponding ply file's loaded geometry.
Default value is 1.}

\item{camera}{List. Representation, in R form, of Three.js' \code{camera} object.
Its properties will be directly transfered to the Three.js scene's \code{camera},
therefore, the list's properties must be structured equivalently to a Three.js \code{camera}.
Default value is \code{NULL}.}

\item{controls}{List. Representation, in R form, of Three.js'
\code{TrackballControls} object. Its properties will be directly transfered to
the Three.js scene's \code{TrackballControls}. Therefore, the list's properties must be
structured equivalently to a Three.js \code{TrackballControls} object. Default value is \code{NULL}.}

\item{toggleMeshes}{List. It can contain \code{labels} (vector or list),
for the labels of opacity or visibility butttons of the scene; and \code{showEvolution},
NULL or Boolean. If \code{showEvolution} is \code{TRUE}, a slider and buttons will be added
to control the meshes' opacity. If \code{showEvolution} is \code{FALSE}, only buttons
will be added to control the meshes' opacity.
Default value is \code{NULL}, for which no slider nor buttons are created.}

\item{showLoadingProgress}{Boolean. \code{TRUE} implies that a progress bar will
show, every two seconds, how many ply files have already been loaded into the scene.}
}
\description{
Load ply files into a three.js scene
}
\examples{
plyLoadR(paths = list("./my-ply-file.ply"), ...)
plyLoadR(plyCopiesFolder = "save-ply-files-here", ...)
plyLoadR(isWireframe = list(TRUE, TRUE), ...)
plyLoadR(isWireframe = TRUE, ...)  # similar to previous example
plyLoadR(isTransparent = list(FALSE, FALSE), ...)
plyLoadR(isTransparent = FALSE, ...)  # similar to previous example
plyLoadR(opacity = list(1, 0.2), ...)
plyLoadR(opacity = list(0.5, 0.5), ...)
plyLoadR(opacity = 0.5, ...)  # similar to previous example

plyLoadR(camera = list(position = list(x = 0, y = 0, z = 0)), ...)
plyLoadR(controls = list(target = list(x = 10, y = 20, z = 30)), ...)

}
